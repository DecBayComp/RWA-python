Bootstrap: docker
From: ubuntu:22.04

%help
RWA-python is available in multiple Python environments:
    python2.7 (alias python2)
    python3.5
    python3.6
    python3.7
    python3.8
    python3.9
    python3.10 (alias python3)
    python3.11
    python3.12
    python3.13
The container OS is Ubuntu Jammy.

%setup

    echo "fr_FR.UTF-8 UTF-8" > ${SINGULARITY_ROOTFS}/etc/locale.gen

    # test local changes that have not been committed yet;
    # to be run from any subdirectory in the RWA-python directory, e.g. containers, tests...
    LOCAL="$(pwd)/.."
    CONTAINED=${SINGULARITY_ROOTFS}/root/RWA-python
    mkdir  -p ${CONTAINED}
    cp -u  -t ${CONTAINED}/ \
              ${LOCAL}/setup.py ${LOCAL}/requirements.txt \
              ${LOCAL}/README.rst ${LOCAL}/LICENSE
    cp -ru -t ${CONTAINED}/ ${LOCAL}/rwa ${LOCAL}/.git
    cd ${CONTAINED} && git clean -xfd

%post

    ln -sf /usr/share/zoneinfo/Europe/Paris /etc/localtime
    apt-get update  -y
    apt-get install -y --no-install-recommends locales
    locale-gen

    apt-get install -y --no-install-recommends libhdf5-openmpi-dev \
        build-essential git software-properties-common pkg-config \
        gpg-agent wget curl libssl-dev zlib1g-dev libbz2-dev \
        libreadline-dev libsqlite3-dev libncursesw5-dev xz-utils \
        tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev

    curl -fsSL https://pyenv.run | bash #&>/dev/null
    export PYENV_ROOT=/root/.pyenv
    for VER in 3.5 3.6; do
      /root/.pyenv/bin/pyenv install $VER
      cat <<EOF >/root/python$VER
#!/bin/bash
PYTHON=\$(ls /root/.pyenv/versions/$VER*/bin/python)
eval "\$PYTHON \$@"
EOF
      chmod a+x /root/python$VER
    done

    add-apt-repository -y ppa:deadsnakes/ppa
    apt-get update  -y
    apt-get install -y --no-install-recommends \
        python2.7 python2.7-dev \
        python3.7 python3.7-dev python3.7-distutils \
        python3.8 python3.8-dev python3.8-venv \
        python3.9 python3.9-dev python3.9-distutils \
        python3.10-dev python3.10-venv \
        python3.11 python3.11-dev python3.11-venv \
        python3.12 python3.12-dev python3.12-venv \
        python3.13 python3.13-dev python3.13-venv
        #python3.5 python3.5-dev \
        #python3.6 python3.6-dev python3.6-distutils \

    # python 3.8 and 3.10 won't work with get-pip.py without package venv

    for OLD in 2.7 3.7; do
        if ! [ -f /root/get-pip$OLD.py ]; then
            wget -P /root/ -- https://bootstrap.pypa.io/pip/$OLD/get-pip.py
            mv /root/get-pip.py ${SINGULARITY_ROOTFS}/root/get-pip$OLD.py
        fi
        if command -v python$OLD &>/dev/null; then
          python$OLD /root/get-pip$OLD.py
        fi
    done
    if ! [ -f /root/get-pip.py ]; then
        wget -P /root/ -- https://bootstrap.pypa.io/get-pip.py
    fi
    for VER in 3.8 3.9 3.10 3.11 3.12 3.13; do
        python$VER /root/get-pip.py
    done

    cd /root
    if [ -d RWA-python ]; then
        cd RWA-python
        git pull || true
    else
        git clone git://github.com/DecBayComp/RWA-python -b dev
        cd RWA-python
    fi

    export CC=mpicc
    export HDF5_MPI="ON"
    export HDF5_LIB=/usr/lib/x86_64-linux-gnu
    cur=`pwd`; cd $HDF5_LIB
    ln -s libhdf5_openmpi.so libhdf5.so
    cd $cur

    export LC_ALL=C
    for version in 2.7 3.6 3.7 3.8 3.9 3.10 3.11 3.12 3.13; do
        python="python${version}"
        if [ "$version" = "3.5" -o "$version" = "3.6" ]; then
          python="/root/$python"
        elif ! command -v $python $>/dev/null; then
          continue
        fi
        pip="$python -m pip"
        pip_install="$pip install -U"
        if [ "$version" = "3.6" -o "$version" = "3.7" -o "$version" = "3.8" -o "$version" = "3.9" -o "$version" = "3.10" -o "$version" = "3.11" -o "$version" = "3.12" -o "$version" = "3.13" ]; then
            $pip_install --force-reinstall setuptools
            $pip_install pytest
        fi
        if [ "$version" = "3.8" -o "$version" = "3.9" -o "$version" = "3.10" -o "$version" = "3.11" -o "$version" = "3.12" -o "$version" = "3.13" ]; then
            $pip_install mpi4py
            #$pip_install --no-binary=h5py h5py
        fi

        #$pip uninstall -qy rwa-python || true
        $pip_install . -r requirements.txt

        for pkg in scipy pandas; do
            if [ -z "$($pip show $pkg)" ]; then
                $pip_install $pkg
            fi
        done
    done

    mkdir -p /pasteur

%runscript

    python="python3"
    if [ -n "$1" ]; then
        if [ "$1" = "-2" -o "$1" = "-27" ]; then
            python="python2.7"
            shift
        elif [ "$1" = "-35" ]; then
            python="/root/python3.5"
            shift
        elif [ "$1" = "-36" ]; then
            python="/root/python3.6"
            shift
        elif [ "$1" = "-37" ]; then
            python="python3.7"
            shift
        elif [ "$1" = "-38" ]; then
            python="python3.8"
            shift
        elif [ "$1" = "-39" ]; then
            python="python3.9"
            shift
        elif [ "$1" = "-3" -o "$1" = "-310" ]; then
            python="python3.10"
            shift
        elif [ "$1" = "-311" ]; then
            python="python3.11"
            shift
        elif [ "$1" = "-312" ]; then
            python="python3.12"
            shift
        elif [ "$1" = "-313" ]; then
            python="python3.13"
            shift
        fi
    fi
    exec $python $@

